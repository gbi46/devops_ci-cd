services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    # Виконуємо міграції та збір статиків перед стартом gunicorn
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn projectname.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    networks:
      - app

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/static
      - media_volume:/media
    networks:
      - app

volumes:
  db_data:
  static_volume:
  media_volume:

networks:
  app:
